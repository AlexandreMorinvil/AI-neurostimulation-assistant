// Generated by view binder compiler. Do not edit!
package com.example.neuraldrive.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.neuraldrive.R;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView appName;

  @NonNull
  public final ImageView broken;

  @NonNull
  public final ImageView check;

  @NonNull
  public final SwitchMaterial enablePassiveData;

  @NonNull
  public final TextView lastMeasuredLabel;

  @NonNull
  public final TextView lastMeasuredValue;

  @NonNull
  public final TextView notAvailable;

  @NonNull
  public final ProgressBar progress;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView appName,
      @NonNull ImageView broken, @NonNull ImageView check,
      @NonNull SwitchMaterial enablePassiveData, @NonNull TextView lastMeasuredLabel,
      @NonNull TextView lastMeasuredValue, @NonNull TextView notAvailable,
      @NonNull ProgressBar progress) {
    this.rootView = rootView;
    this.appName = appName;
    this.broken = broken;
    this.check = check;
    this.enablePassiveData = enablePassiveData;
    this.lastMeasuredLabel = lastMeasuredLabel;
    this.lastMeasuredValue = lastMeasuredValue;
    this.notAvailable = notAvailable;
    this.progress = progress;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_name;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.broken;
      ImageView broken = ViewBindings.findChildViewById(rootView, id);
      if (broken == null) {
        break missingId;
      }

      id = R.id.check;
      ImageView check = ViewBindings.findChildViewById(rootView, id);
      if (check == null) {
        break missingId;
      }

      id = R.id.enable_passive_data;
      SwitchMaterial enablePassiveData = ViewBindings.findChildViewById(rootView, id);
      if (enablePassiveData == null) {
        break missingId;
      }

      id = R.id.last_measured_label;
      TextView lastMeasuredLabel = ViewBindings.findChildViewById(rootView, id);
      if (lastMeasuredLabel == null) {
        break missingId;
      }

      id = R.id.last_measured_value;
      TextView lastMeasuredValue = ViewBindings.findChildViewById(rootView, id);
      if (lastMeasuredValue == null) {
        break missingId;
      }

      id = R.id.not_available;
      TextView notAvailable = ViewBindings.findChildViewById(rootView, id);
      if (notAvailable == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, appName, broken, check,
          enablePassiveData, lastMeasuredLabel, lastMeasuredValue, notAvailable, progress);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
