{
	"extends": "@tsconfig/react-native/tsconfig.json",
    "compilerOptions": {
		/* Custom path mapping */
		"baseUrl": "." ,
		"paths": {
			"@assets/*": ["src/assets/*"],
			"@class/*": ["src/class/*"],
			"@components/*": ["src/components/*"],
		   	"@service/*": ["src/service/*"],
			"@utils/*": ["src/utils/*"],
		},
		
		/* Basic Options */
		"target": "esnext",						// Specify ECMAScript target version: 'ES3' 
												// (default), 'ES5', 'ES2015', 
												// 'ES2016', 'ES2017','ES2018' or 'ESNEXT'.
		"module": "commonjs", 					// Specify module code generation: 'none', 
												// 'commonjs', 'amd', 'system', 'umd', 'es2015', or 
												// 'ESNext'.            					
		
		"allowJs": true,                       	// Allow javascript files to be compiled.
		"jsx": "react-jsx", 					// Specify JSX code generation: 'preserve', 
												// 'react-native', or 'react'.
		"noEmit": false, 						// Do not emit outputs.

		/* Strict Type-Checking Options */
		"strict": true, 						// Enable all strict type-checking options.
		"noImplicitAny": true,                  // Raise error on expressions and declarations with 
												// an implied 'any' type.
		"strictNullChecks": true,               // Enable strict null checks.
		"strictFunctionTypes": true,            // Enable strict checking of function types.
		"strictBindCallApply": true,            // Enable strict 'bind', 'call', and 'apply' methods 
												// on functions.
		"strictPropertyInitialization": true,   // Enable strict checking of property initialization 
												// in classes.
		"noImplicitThis": true,                 // Raise error on 'this' expressions with an implied 
												// 'any' type.
		"alwaysStrict": true,                   // Parse in strict mode and emit "use strict" for 
												// each source file.
		
		/* Additional Checks */
		"noUnusedLocals": true, 				// Report errors on unused locals.
		"noUnusedParameters": true, 			// Report errors on unused parameters.
		"noImplicitReturns": true,             	// Report error when not all code paths in function 
												// return a value.
		"noFallthroughCasesInSwitch": true,    	// Report errors for fallthrough cases in switch 
												// statement.
		"skipLibCheck": true,

		"forceConsistentCasingInFileNames": true,
		"resolveJsonModule": true
    },
    "exclude": ["node_modules"]
}